class Node:
    def __init__(self, val=0, neighbors=None):
        self.val = val
        self.neighbors = neighbors if neighbors is not None else []

class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        if not node:
            return None
        visited = {}

        def dfs(curr):
            if curr in visited:
                return visited[curr]
            copy = Node(curr.val)
            visited[curr] = copy
            copy.neighbors = [dfs(n) for n in curr.neighbors]
            return copy
        
        return dfs(node)
